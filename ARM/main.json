{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "9745804525658320312"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location for Policy Assignment"
      }
    },
    "ManagementGroupID_PolicyAssignment": {
      "type": "string",
      "metadata": {
        "description": "Management group ID for Policy Assignment"
      }
    },
    "virtualNetworkResourceID": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network resource ID to be linked to the private DNS zone"
      }
    },
    "privateDNSzoneNames": {
      "type": "array",
      "defaultValue": [
        "*.mysql.database.azure.com",
        "*.postgres.database.azure.com"
      ],
      "metadata": {
        "description": "Array of private DNS zone names to be linked to the virtual network. Use * as wildcard for subdomain matching. e.g. *.mysql.database.azure.com"
      }
    },
    "createPolicyRemediationTask": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Create Policy Remediation Task"
      }
    }
  },
  "variables": {
    "roleDefId": "b12aa53e-6015-4669-85d0-8515ebb3ae7f"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "8725852328721904928"
            }
          },
          "parameters": {
            "PolicyName": {
              "type": "string",
              "defaultValue": "Create-PrivDNS-vnet-Link"
            },
            "PolicyDisplayName": {
              "type": "string",
              "defaultValue": "Deploy VNET Links to Private DNS Zones"
            },
            "PolicyDescription": {
              "type": "string",
              "defaultValue": "Deploy VNET Links to Private DNS Zones. e.g. for MySQL - Flexible Server and PostgreSQL - Flexible Server"
            },
            "PolicyCategory": {
              "type": "string",
              "defaultValue": "Private DNS Zones"
            },
            "PolicyVersion": {
              "type": "string",
              "defaultValue": "1.0.0"
            }
          },
          "variables": {
            "$fxv#0": {
              "if": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "type"
                  },
                  {
                    "count": {
                      "value": "[[parameters('privateDNSzoneNames')]",
                      "where": {
                        "field": "name",
                        "like": "[[current()]"
                      }
                    },
                    "greater": 0
                  }
                ]
              },
              "then": {
                "details": {
                  "existenceCondition": {
                    "allOf": [
                      {
                        "equals": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                        "field": "type"
                      },
                      {
                        "equals": "[[parameters('virtualNetworkResourceId')]",
                        "field": "Microsoft.Network/privateDnsZones/virtualNetworkLinks/virtualNetwork.id"
                      }
                    ]
                  },
                  "EvaluationDelay": "AfterProvisioningSuccess",
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "privateDnsZoneName": {
                          "value": "[[field('name')]"
                        },
                        "virtualNetworkResourceId": {
                          "value": "[[parameters('virtualNetworkResourceId')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneName": {
                            "type": "string"
                          },
                          "virtualNetworkResourceId": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2020-06-01",
                            "name": "[[concat(parameters('privateDnsZoneName'),'/',last(split(parameters('virtualNetworkResourceId'),'/')))]",
                            "location": "global",
                            "properties": {
                              "registrationEnabled": false,
                              "virtualNetwork": {
                                "id": "[[parameters('virtualNetworkResourceId')]"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f"
                  ],
                  "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks"
                },
                "effect": "deployIfNotExists"
              }
            },
            "$fxv#1": {
              "virtualNetworkResourceId": {
                "type": "String",
                "metadata": {
                  "strongType": "microsoft.Network/virtualNetworks",
                  "displayName": "Vnet Resource ID",
                  "description": "Resource ID of VNE to link. The format must be: '/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Network/virtualNetworks/{virtual network name}'"
                }
              },
              "privateDNSzoneNames": {
                "type": "array",
                "metadata": {
                  "displayName": "Private DNS Zone Names",
                  "description": "Private DNS Zone Names to link. The format must be: '.mysql.database.azure.com'"
                }
              }
            },
            "PolicyRule": "[variables('$fxv#0')]",
            "PolicyParams": "[variables('$fxv#1')]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('PolicyName')]",
              "properties": {
                "description": "[parameters('PolicyDescription')]",
                "displayName": "[parameters('PolicyDisplayName')]",
                "policyType": "Custom",
                "mode": "All",
                "metadata": {
                  "category": "[parameters('PolicyCategory')]",
                  "version": "[parameters('PolicyVersion')]"
                },
                "parameters": "[variables('PolicyParams')]",
                "policyRule": "[variables('PolicyRule')]"
              }
            }
          ],
          "outputs": {
            "PolicyID": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName'))]"
            },
            "PolicyName": {
              "type": "string",
              "value": "[parameters('PolicyName')]"
            },
            "PolicyDisplayName": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName')), '2021-06-01').displayName]"
            },
            "PolicyDescription": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName')), '2021-06-01').description]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "18045596888120486901"
            }
          },
          "parameters": {
            "PolicyName": {
              "type": "string",
              "defaultValue": "Deny-PrivDNS-zones"
            },
            "PolicyDisplayName": {
              "type": "string",
              "defaultValue": "Deny the creation of Private DNS Zones except exclusions"
            },
            "PolicyDescription": {
              "type": "string",
              "defaultValue": "Deny the creation of Private DNS Zones except exclusions like e.g. for MySQL - Flexible Server and PostgreSQL - Flexible Server"
            },
            "PolicyCategory": {
              "type": "string",
              "defaultValue": "Private DNS Zones"
            },
            "PolicyVersion": {
              "type": "string",
              "defaultValue": "1.0.0"
            }
          },
          "variables": {
            "$fxv#0": {
              "if": {
                "allOf": [
                  {
                    "equals": "Microsoft.Network/privateDnsZones",
                    "field": "type"
                  },
                  {
                    "count": {
                      "value": "[[parameters('ExcludeDNSzones')]",
                      "where": {
                        "field": "name",
                        "like": "[[current()]"
                      }
                    },
                    "equals": 0
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            },
            "$fxv#1": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny"
              },
              "ExcludeDNSzones": {
                "type": "array",
                "metadata": {
                  "displayName": "Exclude DNS Zone which contains",
                  "description": "Exclude DNS Zone which contains. Example: '*.contoso.com'"
                }
              }
            },
            "PolicyRule": "[variables('$fxv#0')]",
            "PolicyParams": "[variables('$fxv#1')]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('PolicyName')]",
              "properties": {
                "description": "[parameters('PolicyDescription')]",
                "displayName": "[parameters('PolicyDisplayName')]",
                "policyType": "Custom",
                "mode": "All",
                "metadata": {
                  "category": "[parameters('PolicyCategory')]",
                  "version": "[parameters('PolicyVersion')]"
                },
                "parameters": "[variables('PolicyParams')]",
                "policyRule": "[variables('PolicyRule')]"
              }
            }
          ],
          "outputs": {
            "PolicyID": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName'))]"
            },
            "PolicyName": {
              "type": "string",
              "value": "[parameters('PolicyName')]"
            },
            "PolicyDisplayName": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName')), '2021-06-01').displayName]"
            },
            "PolicyDescription": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('PolicyName')), '2021-06-01').description]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Deploy-CreatePrivDNSvnetLink-policyAssign-{0}', parameters('location'))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('ManagementGroupID_PolicyAssignment'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "PolicyDefID": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyID.value]"
          },
          "virtualNetworkResourceID": {
            "value": "[parameters('virtualNetworkResourceID')]"
          },
          "privateDNSzoneNames": {
            "value": "[parameters('privateDNSzoneNames')]"
          },
          "createPolicyAssignment": {
            "value": "[parameters('createPolicyRemediationTask')]"
          },
          "PolicyDescription": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyDescription.value]"
          },
          "PolicyDisplayName": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyDisplayName.value]"
          },
          "PolicyName": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyName.value]"
          },
          "roleDefinitionId": {
            "value": "[variables('roleDefId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "18066202952590573617"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "PolicyDefID": {
              "type": "string"
            },
            "PolicyName": {
              "type": "string"
            },
            "PolicyDisplayName": {
              "type": "string"
            },
            "PolicyDescription": {
              "type": "string"
            },
            "virtualNetworkResourceID": {
              "type": "string"
            },
            "privateDNSzoneNames": {
              "type": "array"
            },
            "createPolicyAssignment": {
              "type": "bool"
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2022-06-01",
              "name": "[parameters('PolicyName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "displayName": "[parameters('PolicyDisplayName')]",
                "description": "[parameters('PolicyDescription')]",
                "parameters": {
                  "virtualNetworkResourceId": {
                    "value": "[parameters('virtualNetworkResourceID')]"
                  },
                  "privateDNSzoneNames": {
                    "value": "[parameters('privateDNSzoneNames')]"
                  }
                },
                "policyDefinitionId": "[parameters('PolicyDefID')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName')))]",
              "properties": {
                "principalId": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName')), '2022-06-01', 'full').identity.principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName'))]"
              ]
            },
            {
              "condition": "[parameters('createPolicyAssignment')]",
              "type": "Microsoft.PolicyInsights/remediations",
              "apiVersion": "2021-10-01",
              "name": "[parameters('PolicyDisplayName')]",
              "properties": {
                "policyAssignmentId": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName'))]"
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName'))]",
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/roleAssignments', guid(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName'))))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('virtualNetworkResourceID'), '/')[2], split(parameters('virtualNetworkResourceID'), '/')[4]), 'Microsoft.Resources/deployments', format('Deploy-rbac-policyAssign-{0}', parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Deploy-rbac-policyAssign-{0}', parameters('location'))]",
              "subscriptionId": "[split(parameters('virtualNetworkResourceID'), '/')[2]]",
              "resourceGroup": "[split(parameters('virtualNetworkResourceID'), '/')[4]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ManagedIdentityID": {
                    "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName')), '2022-06-01', 'full').identity.principalId]"
                  },
                  "roleDefinitionId": {
                    "value": "[parameters('roleDefinitionId')]"
                  },
                  "VnetName": {
                    "value": "[split(parameters('virtualNetworkResourceID'), '/')[8]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.17.1.54307",
                      "templateHash": "14893589437891546244"
                    }
                  },
                  "parameters": {
                    "VnetName": {
                      "type": "string"
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    },
                    "ManagedIdentityID": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Network/virtualNetworks/{0}', parameters('VnetName'))]",
                      "name": "[guid(resourceId('Microsoft.Network/virtualNetworks', parameters('VnetName')))]",
                      "properties": {
                        "principalId": "[parameters('ManagedIdentityID')]",
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName'))]"
              ]
            }
          ],
          "outputs": {
            "ManagedIdentityID": {
              "type": "string",
              "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('PolicyName')), '2022-06-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('Deploy-DenyPrivDNSZones-policyAssign-{0}', parameters('location'))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('ManagementGroupID_PolicyAssignment'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "PolicyDefID": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyID.value]"
          },
          "PolicyDescription": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyDescription.value]"
          },
          "PolicyDisplayName": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyDisplayName.value]"
          },
          "PolicyName": {
            "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyName.value]"
          },
          "privateDNSzoneNames": {
            "value": "[parameters('privateDNSzoneNames')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "17082975175814245865"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "PolicyDefID": {
              "type": "string"
            },
            "PolicyName": {
              "type": "string"
            },
            "PolicyDisplayName": {
              "type": "string"
            },
            "PolicyDescription": {
              "type": "string"
            },
            "privateDNSzoneNames": {
              "type": "array"
            },
            "PolicyEffect": {
              "type": "string",
              "defaultValue": "Deny",
              "allowedValues": [
                "Deny",
                "Audit",
                "Disabled"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2022-06-01",
              "name": "[parameters('PolicyName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "displayName": "[parameters('PolicyDisplayName')]",
                "description": "[parameters('PolicyDescription')]",
                "parameters": {
                  "effect": {
                    "value": "[parameters('PolicyEffect')]"
                  },
                  "ExcludeDNSzones": {
                    "value": "[parameters('privateDNSzoneNames')]"
                  }
                },
                "policyDefinitionId": "[parameters('PolicyDefID')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-DenyPrivDNSZone_Definition-policyDef-{0}', parameters('location')))]"
      ]
    }
  ],
  "outputs": {
    "PolicyDefID": {
      "type": "string",
      "value": "[reference(extensionResourceId(managementGroup().id, 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyDef-{0}', parameters('location'))), '2022-09-01').outputs.PolicyID.value]"
    },
    "ManagedIdentityID": {
      "type": "string",
      "value": "[reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('ManagementGroupID_PolicyAssignment')), 'Microsoft.Resources/deployments', format('Deploy-CreatePrivDNSvnetLink-policyAssign-{0}', parameters('location'))), '2022-09-01').outputs.ManagedIdentityID.value]"
    }
  }
}